@* Modelo es TicketIndexViewModel *@
@model TicketSystem.ViewModels.TicketIndexViewModel
@using TicketSystem.Models // Para Enum TicketStatus

@{
    ViewData["Title"] = Model.ViewTitle; // Usa propiedad del ViewModel
    var todayDate = DateTime.UtcNow.ToString("D");
    var userRole = Model.UserRole; // Usa propiedad del ViewModel
}

@* Mostrar mensajes de éxito/error de TempData *@
@if (TempData["SuccessMessage"] != null)
{
     <div class="alert alert-success alert-dismissible fade show" role="alert">@TempData["SuccessMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}
@if (TempData["ErrorMessage"] != null)
{
     <div class="alert alert-danger alert-dismissible fade show" role="alert">@TempData["ErrorMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>
}

@* Botón Crear Nuevo Ticket *@
@if (userRole == "Support")
{
    <div class="d-flex justify-content-end mb-3">
        <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle me-1"></i> Crear Nuevo Ticket</a>
    </div>
}

<h1>@ViewData["Title"]</h1>

@* Sección de Estadísticas y Reporte Diario *@
<div class="row justify-content-center mb-4">
    <div class="col-12 col-lg-10 col-xl-8">
        @if (userRole == "Support")
        {
            <div class="card shadow-sm">
                <div class="card-body p-3">
                    <h5 class="card-title">Mis Estadísticas (Soporte)</h5><div class="row">
                        <div class="col-sm-6"><p class="card-text mb-1">Total Creados: <span class="badge bg-primary fs-6">@Model.DashboardData["Stats_TotalCreated"]</span></p><p class="card-text mb-1">Pendientes (Creados por mí): <span class="badge bg-warning text-dark fs-6">@Model.DashboardData["Stats_Pending"]</span></p></div>
                        <div class="col-sm-6"><h6 class="card-subtitle mt-2 mt-sm-0 mb-2 text-muted">Reporte de Hoy (@todayDate)</h6><p class="card-text mb-1">Tickets Registrados Hoy: <span class="badge bg-info text-dark fs-6">@Model.DashboardData["Report_CreatedToday"]</span></p></div>
                    </div>
                </div>
            </div>
        }
        else if (userRole == "Analyst")
        {
            <div class="card shadow-sm">
                <div class="card-body p-3">
                    <h5 class="card-title">Mis Estadísticas (Analista)</h5><div class="row">
                        <div class="col-sm-6"><p class="card-text mb-1">Total Asignados: <span class="badge bg-secondary fs-6">@Model.DashboardData["Stats_TotalAssigned"]</span></p><p class="card-text mb-1">Pendientes (Asignados a mí): <span class="badge bg-warning text-dark fs-6">@Model.DashboardData["Stats_AssignedPending"]</span></p><p class="card-text mb-1">Resueltos (Histórico): <span class="badge bg-success fs-6">@Model.DashboardData["Stats_Resolved"]</span></p></div>
                        <div class="col-sm-6">
                            <h6 class="card-subtitle mt-2 mt-sm-0 mb-2 text-muted">Reporte de Hoy (@todayDate)</h6><p class="card-text mb-1">Tickets Resueltos Hoy: <span class="badge bg-success fs-6">@Model.DashboardData["Report_ResolvedToday"]</span></p>
                            @{
                                int resolvedToday = 0; if (Model.DashboardData.ContainsKey("Report_ResolvedToday") && Model.DashboardData["Report_ResolvedToday"] != null) { int.TryParse(Model.DashboardData["Report_ResolvedToday"].ToString(), out resolvedToday); }
                            }
                            @if (resolvedToday > 0)
                            {
                                <p class="card-text mt-2"><a asp-action="DailyResolvedReport" class="btn btn-sm btn-outline-success">Ver Resueltos Hoy</a></p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (userRole == "Admin")
        {
            <div class="card shadow-sm"><div class="card-body p-3"><h5 class="card-title">Estadísticas Globales (Admin)</h5><div class="row"><div class="col-sm-4"><p class="card-text mb-1">Total Tickets: <span class="badge bg-dark fs-6">@Model.DashboardData["Stats_TotalTickets"]</span></p></div><div class="col-sm-4"><p class="card-text mb-1">Total Pendientes: <span class="badge bg-warning text-dark fs-6">@Model.DashboardData["Stats_TotalPending"]</span></p></div><div class="col-sm-4"><p class="card-text mb-1">Total Resueltos: <span class="badge bg-success fs-6">@Model.DashboardData["Stats_TotalResolved"]</span></p></div></div></div></div>
        }
    </div>
</div>

@* Tabla de Tickets *@
@if (Model.Tickets != null && Model.Tickets.Any())
{
    <div class="table-responsive shadow-sm">
        <table class="table table-striped table-hover table-bordered align-middle mb-0">
            <thead class="table-light">
                <tr>
                    <th>ID</th>
                    <th>Asunto</th>
                    <th>Categoría</th>
                    <th>Estado</th>
                    <th>Urgencia</th>
                    <th>Importancia</th>
                    <th>Fecha Creación</th>
                    @if (userRole == "Analyst" || userRole == "Admin")
                    {
                        <th>Creado Por</th>
                    }
                    @if (userRole == "Support" || userRole == "Admin")
                    {
                        <th>Asignado a</th>
                    }
                    <th class="text-center">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Tickets)
                {
                    <tr>
                        <td>@item.TicketId</td>
                        <td>@item.Subject</td>
                        <td>@item.CategoryName</td>
                        <td><span class="badge @GetStatusBadgeClassFromString(item.Status)">@item.Status</span></td>
                        <td>@item.Urgency</td>
                        <td>@item.Importance</td>
                        <td>@item.CreatedAt.ToString("g")</td>
                        @if (userRole == "Analyst" || userRole == "Admin")
                        {
                            <td>@(item.CreatedByUserEmail ?? "N/A")</td>
                        }
                        @if (userRole == "Support" || userRole == "Admin")
                        {
                            <td>@(item.AssignedToUserEmail ?? "Sin asignar")</td>
                        }
                        <td class="text-center">
                            <a asp-action="Details" asp-route-id="@item.TicketId" class="btn btn-info" title="Detalles"><i class="bi bi-info-circle me-1"></i>Detalles</a>
                            <a asp-action="Edit" asp-route-id="@item.TicketId" class="btn btn-warning" title="Editar"><i class="bi bi-pencil-square me-1"></i>Editar</a>
                            <a asp-action="Delete" asp-route-id="@item.TicketId" class="btn btn-danger" title="Eliminar"><i class="bi bi-trash me-1"></i>Eliminar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
     <div class="alert alert-info mt-3" role="alert"> No hay tickets para mostrar en esta vista. </div>
}

@functions {
    string GetStatusBadgeClassFromString(string status)
    {
        if (Enum.TryParse<TicketStatus>(status, true, out var statusEnum))
        {
            return statusEnum switch
            {
                TicketStatus.Creado => "bg-primary text-white",
                TicketStatus.Pendiente => "bg-info text-dark",
                TicketStatus.EnProgreso => "bg-warning text-dark",
                TicketStatus.Resuelto => "bg-success text-white",
                TicketStatus.Cerrado => "bg-secondary text-white",
                _ => "bg-light text-dark",
            };
        }
        return "bg-light text-dark";
    }
}
